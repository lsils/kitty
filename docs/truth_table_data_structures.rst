Truth table data structures
===========================

Dynamic truth table
-------------------

The header ``<kitty/dynamic_truth_table.hpp>`` implements a dynamic
truth table.  A dynamic truth table can be initialized with a number
of variables that is computed at runtime.

The class :cpp:class:`kitty::dynamic_truth_table` provides the
following public member functions.

+-----------------------------------+----------------------------------------------------------------------------------+
| Function                          | Description                                                                      |
+===================================+==================================================================================+
| ``dynamic_truth_table(num_vars)`` | Standard constructor.                                                            |
+-----------------------------------+----------------------------------------------------------------------------------+
| ``construct()``                   | Constructs a new dynamic truth table instance with the same number of variables. |
+-----------------------------------+----------------------------------------------------------------------------------+
| ``num_vars()``                    | Returns number of variables.                                                     |
+-----------------------------------+----------------------------------------------------------------------------------+
| ``num_blocks()``                  | Returns number of blocks.                                                        |
+-----------------------------------+----------------------------------------------------------------------------------+
| ``num_bits()``                    | Returns number of bits.                                                          |
+-----------------------------------+----------------------------------------------------------------------------------+
| ``begin()``                       | Begin iterator to bits.                                                          |
+-----------------------------------+----------------------------------------------------------------------------------+
| ``end()``                         | End iterator to bits.                                                            |
+-----------------------------------+----------------------------------------------------------------------------------+
| ``rbegin()``                      | Reverse begin iterator to bits.                                                  |
+-----------------------------------+----------------------------------------------------------------------------------+
| ``rend()``                        | Reverse end iterator to bits.                                                    |
+-----------------------------------+----------------------------------------------------------------------------------+
| ``cbegin()``                      | Constant begin iterator to bits.                                                 |
+-----------------------------------+----------------------------------------------------------------------------------+
| ``cend()``                        | Constant end iterator to bits.                                                   |
+-----------------------------------+----------------------------------------------------------------------------------+
| ``crbegin()``                     | Constant reverse begin iterator to bits.                                         |
+-----------------------------------+----------------------------------------------------------------------------------+
| ``crend()``                       | Constant reverse end iterator to bits.                                           |
+-----------------------------------+----------------------------------------------------------------------------------+
| ``operator=(other)``              | Assignment operator.                                                             |
+-----------------------------------+----------------------------------------------------------------------------------+
| ``mask_bits()``                   | Masks the number of valid truth table bits.                                      |
+-----------------------------------+----------------------------------------------------------------------------------+

.. doxygenstruct:: kitty::dynamic_truth_table
   :members:

Static truth table
------------------

The header ``<kitty/static_truth_table.hpp>`` implements a static
truth table.  A static truth table must be initialized with a number
of variables that is computed at compile time. It performs much faster
than the dynamic truth table. Also it is optimized for a small number
of variables, i.e., up to 6 variables. Then a truth table fits into a
single block of 64 bits. The interface makes this optimization
intransparent to the user.

The class :cpp:class:`kitty::static_truth_table` provides the
following public member functions.

+--------------------------+---------------------------------------------------------------------------------+
| Function                 | Description                                                                     |
+==========================+=================================================================================+
| ``static_truth_table()`` | Standard constructor.                                                           |
+--------------------------+---------------------------------------------------------------------------------+
| ``construct()``          | Constructs a new static truth table instance with the same number of variables. |
+--------------------------+---------------------------------------------------------------------------------+
| ``num_vars()``           | Returns number of variables.                                                    |
+--------------------------+---------------------------------------------------------------------------------+
| ``num_blocks()``         | Returns number of blocks.                                                       |
+--------------------------+---------------------------------------------------------------------------------+
| ``num_bits()``           | Returns number of bits.                                                         |
+--------------------------+---------------------------------------------------------------------------------+
| ``begin()``              | Begin iterator to bits.                                                         |
+--------------------------+---------------------------------------------------------------------------------+
| ``end()``                | End iterator to bits.                                                           |
+--------------------------+---------------------------------------------------------------------------------+
| ``rbegin()``             | Reverse begin iterator to bits.                                                 |
+--------------------------+---------------------------------------------------------------------------------+
| ``rend()``               | Reverse end iterator to bits.                                                   |
+--------------------------+---------------------------------------------------------------------------------+
| ``cbegin()``             | Constant begin iterator to bits.                                                |
+--------------------------+---------------------------------------------------------------------------------+
| ``cend()``               | Constant end iterator to bits.                                                  |
+--------------------------+---------------------------------------------------------------------------------+
| ``crbegin()``            | Constant reverse begin iterator to bits.                                        |
+--------------------------+---------------------------------------------------------------------------------+
| ``crend()``              | Constant reverse end iterator to bits.                                          |
+--------------------------+---------------------------------------------------------------------------------+
| ``operator=(other)``     | Assignment operator.                                                            |
+--------------------------+---------------------------------------------------------------------------------+
| ``mask_bits()``          | Masks the number of valid truth table bits.                                     |
+--------------------------+---------------------------------------------------------------------------------+

.. doxygenstruct:: kitty::static_truth_table
   :members:

Partial truth table
-------------------

The header ``<kitty/partial_truth_table.hpp>`` implements a partial
truth table.  Unlike dynamic truth tables and static truth tables, 
which are known as "complete truth table" types, the length of a 
partial truth table is not limited to a power of 2. A partial truth 
table can be initialized with an arbitrary number of bits.

The class :cpp:class:`kitty::partial_truth_table` provides the
following public member functions.

+-----------------------------------+--------------------------------------------------------------------------------------------------+
| Function                          | Description                                                                                      |
+===================================+==================================================================================================+
| ``partial_truth_table(num_bits)`` | Standard constructor.                                                                            |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``construct()``                   | Constructs a new partial truth table instance with the same number of bits.                      |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``num_blocks()``                  | Returns number of blocks.                                                                        |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``num_bits()``                    | Returns number of bits.                                                                          |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``begin()``                       | Begin iterator to bits.                                                                          |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``end()``                         | End iterator to bits.                                                                            |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``rbegin()``                      | Reverse begin iterator to bits.                                                                  |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``rend()``                        | Reverse end iterator to bits.                                                                    |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``cbegin()``                      | Constant begin iterator to bits.                                                                 |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``cend()``                        | Constant end iterator to bits.                                                                   |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``crbegin()``                     | Constant reverse begin iterator to bits.                                                         |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``crend()``                       | Constant reverse end iterator to bits.                                                           |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``operator=(other)``              | Assignment operator.                                                                             |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``mask_bits()``                   | Masks the number of valid truth table bits.                                                      |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``resize(num_bits)``              | Resize the truth table to have the given number of bits.                                         |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``add_bit(bit)``                  | Add a bit to the end of the truth table.                                                         |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``add_bits(bits)``                | Add several bits to the end of the truth table.                                                  |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``copy_bits(from, to)``           | Overwrite the value at position `from` to position `to`.                                         |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``erase_bit_swap(position)``      | Erase the bit at the given position by swapping with the last bit and shrinking the truth table. |
+-----------------------------------+--------------------------------------------------------------------------------------------------+
| ``erase_bit_shift(position)``     | Erase the bit at the given position and shift all the following bits.                            |
+-----------------------------------+--------------------------------------------------------------------------------------------------+

.. doxygenstruct:: kitty::partial_truth_table
   :members:

Ternary truth table
-------------------

The header ``<kitty/ternary_truth_table.hpp>`` implements a
truth table with don't cares. That is, a truth table in which 
some output values are ignored, either because they are not 
of any interest or because they are unknown.
A ternary truth table is composed by two truth tables of the same type: 
one representing the bits and the other representing the care.
A don't care is represented as a 0 in the bit truth table 
and a 0 in the care truth table.

The class :cpp:class:`kitty::ternary_truth_table` provides the
following public member functions.

+-------------------------------------+--------------------------------------------------------------------------------------------------+
| Function                            | Description                                                                                      |
+=====================================+==================================================================================================+
| ``ternary_truth_table(num_bits)``   | Standard constructor.                                                                            |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``ternary_truth_table()``           | Empty constructor.                                                                               |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``ternary_truth_table(bits, care)`` | Construct from bits and care.                                                                    |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``ternary_truth_table(bits)``       | Construct from a binary truth table.                                                             |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``construct()``                     | Constructs a new partial truth table instance with the same number of bits.                      |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``num_vars()``                      | Returns number of variables.                                                                     |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``num_blocks()``                    | Returns number of blocks.                                                                        |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``num_bits()``                      | Returns number of bits.                                                                          |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``begin_bits()``                    | Begin iterator to bits.                                                                          |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``end_bits()``                      | End iterator to bits.                                                                            |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``rbegin_bits()``                   | Reverse begin iterator to bits.                                                                  |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``rend_bits()``                     | Reverse end iterator to bits.                                                                    |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``cbegin_bits()``                   | Constant begin iterator to bits.                                                                 |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``cend_bits()``                     | Constant end iterator to bits.                                                                   |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``crbegin_bits()``                  | Constant reverse begin iterator to bits.                                                         |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``crend_bits()``                    | Constant reverse end iterator to bits.                                                           |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``begin_care()``                    | Begin iterator to care.                                                                          |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``end_care()``                      | End iterator to care.                                                                            |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``rbegin_care()``                   | Reverse begin iterator to care.                                                                  |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``rend_care()``                     | Reverse end iterator to care.                                                                    |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``cbegin_care()``                   | Constant begin iterator to care.                                                                 |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``cend_care()``                     | Constant end iterator to care.                                                                   |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``crbegin_care()``                  | Constant reverse begin iterator to care.                                                         |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``crend_care()``                    | Constant reverse end iterator to care.                                                           |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``operator=(other)``                | Assign other ternary truth table or binary truth table with all bits                             |
+-------------------------------------+--------------------------------------------------------------------------------------------------+
| ``mask_bits()``                     | Masks valid truth table bits.                                                                    |
+-------------------------------------+--------------------------------------------------------------------------------------------------+

.. doxygenstruct:: kitty::ternary_truth_table
   :members: